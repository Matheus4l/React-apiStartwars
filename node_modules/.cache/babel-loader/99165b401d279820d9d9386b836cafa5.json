{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Projetos/Matheus/testereact/src/pages/main/index.js\";\nimport React, { Component } from 'react';\nimport Api from '../../services/App';\nimport { async } from 'q';\nimport apiStarWars from '../../services/App';\nimport './style.css';\nimport { Button, Pagination } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      planets: [],\n      num: 1\n    };\n\n    this.proximo = () => {\n      this.state.num += 1;\n      this.loadPlanets(this.state.num);\n    };\n\n    this.anterior = () => {\n      if (this.state.num > 1) {\n        this.state.num -= 1;\n      }\n\n      this.loadPlanets(this.state.num);\n    };\n\n    this.loadPlanets = async num => {\n      const response = await apiStarWars.get('planets/' + num + '/');\n      console.log(response.data);\n      this.setState({\n        planets: response.data\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadPlanets(this.state.num);\n  }\n\n  render() {\n    const planets = this.state.planets;\n    return React.createElement(\"div\", {\n      className: \"listPlanets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.anterior,\n      variant: \"outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(Button, {\n      onClick: this.proximo,\n      variant: \"outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Proximo\")), React.createElement(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Pagination.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Pagina:\", this.state.num)), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Planeta\"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, planets.name), React.createElement(\"table\", {\n      class: \"table table-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Popula\\xE7\\xE3o\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(NumberFormat, {\n      value: planets.population,\n      displayType: 'text',\n      thousandSeparator: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Clima\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, planets.climate)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Diamentro\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, planets.diameter, \" Km\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Per\\xEDodo de rota\\xE7\\xE3o\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, planets.rotation_period, \"Horas\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" Per\\xEDodo orbital \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, planets.orbital_period, \" Dias\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Agua da superf\\xEDcie \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, planets.surface_water, \"%\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Projetos/Matheus/testereact/src/pages/main/index.js"],"names":["React","Component","Api","async","apiStarWars","Button","Pagination","NumberFormat","Main","state","planets","num","proximo","loadPlanets","anterior","response","get","console","log","data","setState","componentDidMount","render","fontSize","name","population","climate","diameter","rotation_period","orbital_period","surface_water"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Api from '../../services/App'\nimport { async } from 'q';\nimport apiStarWars from '../../services/App';\nimport './style.css';\nimport {Button,Pagination} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\n\nexport default class Main extends Component{\n\n    state={\n      planets:[],\n      num  : 1\n    };\n\n    componentDidMount(){\n        \n        this.loadPlanets(this.state.num);\n    };\n\n    \n\n    render(){\n        const {planets}= this.state;\n        return <div className='listPlanets'>\n        <div className=\"button\">\n        <Button   onClick={this.anterior} variant=\"outline-warning\">Anterior</Button>\n        <Button  onClick={this.proximo} variant=\"outline-warning\" >Proximo</Button>\n   </div>     \n        <Pagination>\n                    <Pagination.Item >Pagina:{this.state.num}</Pagination.Item> \n                 </Pagination>\n                <article>\n               \n                   <strong style ={{fontSize:20}}>Planeta</strong>\n                   <strong>{planets.name}</strong>\n                   <table class=\"table table-dark\">\n                   \n                   <tbody>\n                     <tr>\n                       <th scope=\"row\">1</th>\n                       <td>População</td>\n                       <td><NumberFormat value={planets.population} displayType={'text'} thousandSeparator={true} /> \n                         </td>\n                     \n                     </tr>\n                     <tr>\n                       <th scope=\"row\">2</th>\n                       <td>Clima</td>\n                       <td>{planets.climate}</td>\n                       \n                     </tr>\n                     <tr>\n                       <th scope=\"row\">3</th>\n                       <td>Diamentro</td>\n                       <td>{planets.diameter} Km</td>\n                      \n                     </tr>\n                     <tr>\n                     <th scope=\"row\">4</th>\n                     <td> Período de rotação</td>\n                     <td>{planets.rotation_period}Horas</td>\n                    \n                   </tr>\n                   <tr>\n                     <th scope=\"row\">4</th>\n                     <td> Período orbital </td>\n                     <td>{planets.orbital_period} Dias</td>\n                    \n                   </tr>\n                   <tr>\n                   <th scope=\"row\">4</th>\n                   <td> Agua da superfície </td>\n                   <td>{planets.surface_water}%</td>\n                  \n                 </tr>\n                    \n                   </tbody>\n                 </table>\n                 \n                 </article>\n                \n        </div>\n        \n        \n    }\n\n    proximo = ()=>{\n      this.state.num +=1;\n      this.loadPlanets( this.state.num);\n    }\n\n    anterior = ()=>{\n      if(this.state.num > 1){\n            this.state.num -=1;\n        }\n      this.loadPlanets( this.state.num);\n    }\n\n    loadPlanets= async(num)=>{\n\n        const response =await apiStarWars.get('planets/'+num+'/');\n        console .log(response.data);\n         this.setState({planets: response.data})\n      \n\n    };\n}"]},"metadata":{},"sourceType":"module"}